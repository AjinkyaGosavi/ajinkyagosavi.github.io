<!DOCTYPE html>
<html>
    <head>
        <meta charset="utf-8" />
        <title>Client Code - HERE Maps API for JavaScript</title>
        <script type="text/javascript" src="https://js.api.here.com/v3/3.1/mapsjs-core.js"></script>
        <script type="text/javascript" src="https://js.api.here.com/v3/3.1/mapsjs-service.js"></script>
        <script type="text/javascript" src="https://js.api.here.com/v3/3.1/mapsjs-mapevents.js"></script>
        <script type="text/javascript" charset="utf-8" src="https://js.api.here.com/v3/3.1/mapsjs-ui.js" ></script>
        <script type="text/javascript" src="https://js.api.here.com/v3/3.1/mapsjs-harp.js"></script>
        <link rel="stylesheet" type="text/css" href="https://js.api.here.com/v3/3.1/mapsjs-ui.css" />

        <style>
            body {
                width: 100%;
                height: 100%;
                position: absolute;
                margin: 0px;
                padding: 0px;
                overflow: hidden;
            }

            #map {
                position: absolute;
                top: 0;
                bottom: 0;
                width: 100%;
                height: 100%;
            }
        </style>
    </head>

    <body>
        <div id="map"></div>

        <script>
            const engineType = H.Map.EngineType["HARP"];

            // Initiate and authenticate your connection to the HERE platform
            const platform = new H.service.Platform({
                apikey: "{{ apiKey }}",
            });

            // Create an instance of the HERE Raster Tile Service
            const rasterTileService = platform.getRasterTileService({
                resource: "{{ resource }}",
                format: "{{ format }}",
                queryParams: {{{ queryParams }}},
            });

            // Retrieve and display the map tiles by creating a Raster Tile Provider object
            const rasterTileProvider = new H.service.rasterTile.Provider(
                rasterTileService,
                {
                    tileSize: {{ tileSize }},
                    engineType: engineType,
                }
            );

            // Create a tile layer object by using the Raster Tile Provider
            const rasterTileLayer = new H.map.layer.TileLayer(
                rasterTileProvider
            );

            // Instantiate (and display) a map:
            const map = new H.Map(
                document.getElementById("map"),
                rasterTileLayer,
                {
                    zoom: {{ zoom }},
                    center: {{{ center }}},
                    engineType: engineType,
                }
            );

            // MapEvents enables the event system.
            // The behavior variable implements default interactions for pan/zoom (also on touch devices).
            const behavior = new H.mapevents.Behavior(
                new H.mapevents.MapEvents(map)
            );

            // Enable dynamic resizing of the map, based on the current size of the enclosing container
            window.addEventListener("resize", () => map.getViewPort().resize());

            // Create zoom control UI
            const ui = new H.ui.UI(map, {
                zoom: {
                    fractionalZoom: false,
                    alignment: H.ui.LayoutAlignment.RIGHT_BOTTOM,
                },
            });
        </script>
    </body>
</html>